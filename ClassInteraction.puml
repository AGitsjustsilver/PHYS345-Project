@startuml
class Rubiks_ {
    - Panel panel
    - int previousID
    {static} - Frame instance
    ~ String[] choices

    ~ void addButton(String label, int index)
    + void actionPerformed(ActionEvent e)
    + void processWindowEvent(WindowEvent e)
}
class Runner {
    - String command
    - ImagePlus imp
    ~Runner(String command, ImagePlus imp)
    + void run()
    ~ void runCommand(String command, ImagePlus imp)

}
class ByteRubiks {
    + _Rubiks(ImageJ imp, ImageProcessor ip)
    + void encrypt()
    + void decrypt()

}
class RGBRubiks {
    + _Rubiks(ImageJ imp, ImageProcessor ip)
    + void encrypt()
    + void decrypt()

}
class VectorKeys {
    ~ Vector<BigInteger> cVector
    ~ Vector<BigInteger> rVector
}
abstract class Rubiks {
    {abstract} + void encrypt()
    {abstract} + void decrypt()
}
interface ActionListener
class PlugInFrame
class Thread


RGBRubiks --|> ByteRubiks  : extends
RGBRubiks --* Rubiks_ : contains

ByteRubiks --* Rubiks_ : contains
ByteRubiks --|> Rubiks : extends

Rubiks_ --|> PlugInFrame : extends
Rubiks_ --|> ActionListener

Runner --+ Rubiks_ : innerclass
Runner --|> Thread : extends

hide empty members
@enduml